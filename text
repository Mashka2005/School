 IDE (Integrated Development Environment) –
это интегрированная, единая среда разработки,
которая используется разработчиками для создания 
различного программного обеспечения. 
 IDE представляет собой комплекс из нескольких 
инструментов, а именно: текстового редактора, 
компилятора либо интерпретатора, средств 
автоматизации сборки и отладчика. 
 Есть IDE, которые предназначены для работы
только с одним языком программирования, 
однако большинство современных IDE позволяет 
работать сразу с несколькими.

 Как же определить,какая среда разработки 
подойдет конкретно для вас? 
 В этом вопросе надо основываться на четырех 
факторах:
1)язык разработки;
2)простота использования;
3)на каких платформах работает;
4)стоимость.

 Итак, давайте рассмотрим некоторые среды 
разработки,их преимущества и недостатки.
 1.PhpStorm
Платформы: Windows/Linux/macOS
Поддерживаемые языки: PHP, JavaScript, 
HTML, CSS, SASS, LESS и т.д.
  Преимущества
1)Автодополнение кода и качественная отладка.
2)Удобная навигация.
3)Безопасный рефакторинг – применить изменения 
во всем проекте можно за пару кликов.
4)Функция Live Edit позволяет мгновенно 
посмотреть все изменения в браузере.
5)Интерфейс будет понятен даже новичкам. 

Недостатки
1)Нет бесплатной версии. Но можно скачать
триал.  
  2.CLion
Платформы: Windows/Linux/macOS
Поддерживаемые языки: С++, C, Objective C,
Kotlin, Python, Swift, Fortran, JavaScript,
CSS и другие.

Преимущества
1)Поддержка удаленной разработки по SSH.
2)Просмотр значений переменных прямо в редакторе.
3)Умная помощь при написании кода.
4)Возможность кастомизировать редактор.
5)Быстрый и безопасный рефакторинг.
6)Широкий функционал. IDE можно использовать 
даже для программирования микроконтроллеров. 

Недостатки 
1)Нет бесплатной версии. Но, как и в случае 
с PhpStorm, можно скачать пробную версию.

 Теперь давайте рассмотрим несколько бесплатных
сред разработок программного обеспечения и 
поддерживаемых ими языков программирования. 
  1.NetBeans
Платформы: Windows/Linux/macOS/BSD
Поддерживаемые языки: C, C++, C++ 11,
Fortan, HTML 5, Java, PHP и другие.
 
Преимущества
1)Интуитивно понятный интерфейс drag-and-drop.
2)Динамические и статические библиотеки.
3)Возможность удаленной разработки.
4)Совместима с Windows, Linux, macOS и 
Solaris.
5)Поддержка Qt.
6)Поддерживает различные компиляторы,
в том числе CLang/LLVM, Cygwin, GNU, MinGW и 
Oracle Solaris Studio. 

Недостатки
1)NetBeans требуется много памяти, поэтому 
на некоторых машинах эта среда может 
подтормаживать. 

  2.Eclipse
Платформы: Windows/Linux/macOS
Поддерживаемые языки: C, C++, Java, Perl,
PHP, Python, Ruby и другие. 

Преимущества
1)Возможность программировать на множестве 
языков.
2)Значительная гибкость среды за счет 
модульности.
3)Возможность интеграции JUnit.
4)Удаленная отладка (при использовании JVM). 

Недостатки
1)Новичкам может быть сложно разобраться 
в многообразии возможностей. 

  Какую же IDE считают лучшей профессионалы?
  Давайте обратимся к мнениям известных 
программистов.
1)"Для моих задач и стека языков лучше всего 
подходят IDE от Jetbrains: Phpstorm, Webstorm 
и Goland (все на базе InteliJ IDEA). В этих 
IDE есть почти все, что мне необходимо. 
Начиная с клиента баз данных и заканчивая 
автоматизацией для тестирования. Но что можно 
посоветовать новичкам? Хм... Если речь идет о Frontend, 
то бесплатного VSCode вполне может хватить, 
он гораздо менее требователен к ресурсам компьютера, 
чем тот же Webstorm. Для PHP все-таки лучший 
вариант это PhpStorm. Но все зависит от личных 
предпочтений". 
– Максим, Senior PHP Developer. 
Работает на PHP/Go/JavaScript/Typescript,
а также SQL и HTML/CSS 

2)"Мой выбор – IntelliJ IDEA. Отличный поиск 
по исходникам, автодополнение, подсветка 
синтаксиса, шаблоны (кода, файлов и даже группы 
файлов), макросы, множество бесплатных плагинов. 
Рекомендую ее и новичкам. 
– Олег, старший программист Erlang. 
Работает на Erlang, SQL, Bash, Awk и Yaml

 Таким образом, подытоживая статью,хотелось бы 
сказать,что Использование IDE для разработки 
программного обеспечения является прямой 
противоположностью способу, в котором используются
несвязанные инструменты, такие как текстовый 
редактор, компилятор, и т. п. Интегрированные 
среды разработки были созданы для того, чтобы 
максимизировать производительность программиста 
благодаря тесно связанным компонентам с простыми 
пользовательскими интерфейсами. Это позволяет 
разработчику сделать меньше действий для переключения 
различных режимов, в отличие от дискретных программ 
разработки. Однако так как IDE является сложным программным 
комплексом, то среда разработки сможет качественно 
ускорить процесс разработки ПО лишь после специального 
обучения. Для уменьшения барьера вхождения
многие достаточно интерактивны, а для облегчения 
перехода с одной на другую интерфейс у одного 
производителя максимально близок, вплоть до использования 
одной IDE.
